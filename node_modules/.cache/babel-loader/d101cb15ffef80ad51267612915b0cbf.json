{"ast":null,"code":"var _jsxFileName = \"/home/san/React/0. DERS ANLATIMI/002-Task-Tracker/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Study React Pre-Class Notes\",\n    day: \"Dec 12th at 2:30pm\",\n    isDone: false\n  }, {\n    id: 2,\n    text: \"Feed the Dog\",\n    day: \"Dec 13th at 1:30pm\",\n    isDone: true\n  }, {\n    id: 3,\n    text: \"Wash Car\",\n    day: \"Dec 14th at 3:00pm\",\n    isDone: false\n  }]);\n  const [showAddTask, setShowAddTask] = useState(false); // ADD TASK\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // DELETE TASK\n\n\n  const deleteTask = deletedTaskId => {\n    // console.log(\"delete\", deletedTask);\n    setTasks(tasks.filter(task => task.id !== deletedTaskId));\n  }; //TOGGLE DONE\n\n\n  const toggleDone = toogleDoneId => {\n    setTasks(tasks.map(task => task.id === toogleDoneId ? { ...task,\n      isDone: !task.isDone\n    } : task));\n  }; //TOOGLESHOW\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), showAddTask ? /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this) : null, tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No Tasks to Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eG7ZyKTpdcoHSYVmuGfebRUWsaY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/san/React/0. DERS ANLATIMI/002-Task-Tracker/task-tracker/src/App.js"],"names":["useState","AddTask","Header","Tasks","App","tasks","setTasks","id","text","day","isDone","showAddTask","setShowAddTask","addTask","task","Math","floor","random","newTask","deleteTask","deletedTaskId","filter","toggleDone","toogleDoneId","map","toggleShow","length","textAlign"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,6BAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAbiC,CAAD,CAAlC;AAqBA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C,CAtBa,CAwBb;;AACA,QAAMa,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMP,EAAE,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAA7C;AACA,UAAMC,OAAO,GAAG;AAAEX,MAAAA,EAAF;AAAM,SAAGO;AAAT,KAAhB;AACAR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACD,GAJD,CAzBa,CA+Bb;;;AACA,QAAMC,UAAU,GAAIC,aAAD,IAAmB;AACpC;AACAd,IAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYa,aAAnC,CAAD,CAAR;AACD,GAHD,CAhCa,CAqCb;;;AACA,QAAME,UAAU,GAAIC,YAAD,IAAkB;AACnCjB,IAAAA,QAAQ,CACND,KAAK,CAACmB,GAAN,CAAWV,IAAD,IACRA,IAAI,CAACP,EAAL,KAAYgB,YAAZ,GAA2B,EAAE,GAAGT,IAAL;AAAWJ,MAAAA,MAAM,EAAE,CAACI,IAAI,CAACJ;AAAzB,KAA3B,GAA+DI,IADjE,CADM,CAAR;AAKD,GAND,CAtCa,CA8Cb;;;AACA,QAAMW,UAAU,GAAG,MAAMb,cAAc,CAAC,CAACD,WAAF,CAAvC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,WAAW,EAAEA,WAFf;AAGE,MAAA,UAAU,EAAEc;AAHd;AAAA;AAAA;AAAA;AAAA,YADF,EAMGd,WAAW,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmC,IANjD,EASGR,KAAK,CAACqB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAErB,KAAd;AAAqB,MAAA,UAAU,EAAEc,UAAjC;AAA6C,MAAA,UAAU,EAAEG;AAAzD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAG,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlEQvB,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Study React Pre-Class Notes\",\n      day: \"Dec 12th at 2:30pm\",\n      isDone: false,\n    },\n    {\n      id: 2,\n      text: \"Feed the Dog\",\n      day: \"Dec 13th at 1:30pm\",\n      isDone: true,\n    },\n    {\n      id: 3,\n      text: \"Wash Car\",\n      day: \"Dec 14th at 3:00pm\",\n      isDone: false,\n    },\n  ]);\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // ADD TASK\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // DELETE TASK\n  const deleteTask = (deletedTaskId) => {\n    // console.log(\"delete\", deletedTask);\n    setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  };\n\n  //TOGGLE DONE\n  const toggleDone = (toogleDoneId) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === toogleDoneId ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  };\n\n  //TOOGLESHOW\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        showAddTask={showAddTask}\n        toggleShow={toggleShow}\n      />\n      {showAddTask ? <AddTask addTask={addTask} /> : null}\n      {/* <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} /> */}\n\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\n      ) : (\n        <p style={{ textAlign: \"center\" }}>No Tasks to Show</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}