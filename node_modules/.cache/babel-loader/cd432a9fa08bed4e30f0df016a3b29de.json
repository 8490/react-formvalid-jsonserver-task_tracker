{"ast":null,"code":"var _jsxFileName = \"/home/san/React/react-formvalid-jsonserver-task_tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const baseUrl = \"https://ethan-task-tracker.herokuapp.com/tasks\"; // CRUD Create Read Update, Delete\n  // Fetch Tasks\n  // const fetchTasks = async () => {\n  //   const res = await fetch(baseUrl);\n  //   const data = await res.json();\n  //   console.log(data);\n  // };\n  // Fetch tasks with axios\n\n  const fetchTasks = async () => {\n    // const res = await axios.get(baseUrl);\n    const {\n      data\n    } = await axios.get(baseUrl);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []); // ADD TASK\n  // const addTask = async (newTask) => {\n  //   const res = await fetch(baseUrl, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newTask),\n  //   });\n  //   fetchTasks();\n  // };\n\n  const addTask = async newTask => {\n    await axios.post(baseUrl, newTask);\n    fetchTasks();\n  }; // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = { id, ...newTask };\n  //   setTasks([...tasks, addNewTask]);\n  // };\n  // DELETE TASK\n\n\n  const deleteTask = async deletedTaskId => {\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTasks();\n  }; // const deleteTask = async (deletedTaskId) => {\n  //   await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //     method: \"DELETE\",\n  //   });\n  //   fetchTasks();\n  // };\n  // const deleteTask = (deletedTaskId) => {\n  // console.log(\"delete\", deletedTask);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  // };\n  //TOGGLE DONE\n\n\n  const toggleDone = async toogleDoneId => {\n    const {\n      data\n    } = await axios.get(`${baseUrl}/${toogleDoneId}`);\n    const updatedTask = { ...data,\n      isDone: !data.isDone\n    };\n    await axios.put(`${baseUrl}/${toogleDoneId}`, updatedTask);\n    fetchTasks();\n  }; // const toggleDone = async (toogleDoneId) => {\n  //   const res = await fetch(`${baseUrl}/${toogleDoneId}`);\n  //   const data = await res.json();\n  //   const updatedTask = { ...data, isDone: !data.isDone };\n  //   await fetch(`${baseUrl}/${toogleDoneId}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updatedTask),\n  //   });\n  //   fetchTasks();\n  // };\n  // const toggleDone = (toogleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === toogleDoneId ? { ...task, isDone: !task.isDone } : task\n  //     )\n  //   );\n  // };\n  //TOOGLESHOW\n\n\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      showAddTask: showAddTask,\n      toggleShow: toggleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      style: {\n        backgroundColor: \"purple\",\n        alignSelf: \"center\"\n      },\n      onClick: toggleShow // onClick={handleClick}\n      ,\n      children: \"TEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      toggleDone: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No Tasks to Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PLX2zQ+tVGuPD20Z1DPltP04Zzk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/san/React/react-formvalid-jsonserver-task_tracker/src/App.js"],"names":["useState","useEffect","AddTask","Header","Tasks","axios","App","tasks","setTasks","showAddTask","setShowAddTask","baseUrl","fetchTasks","data","get","addTask","newTask","post","deleteTask","deletedTaskId","delete","toggleDone","toogleDoneId","updatedTask","isDone","put","toggleShow","backgroundColor","alignSelf","length","textAlign"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const baseUrl = \"https://ethan-task-tracker.herokuapp.com/tasks\";\n\n  // CRUD Create Read Update, Delete\n\n  // Fetch Tasks\n  // const fetchTasks = async () => {\n  //   const res = await fetch(baseUrl);\n  //   const data = await res.json();\n  //   console.log(data);\n  // };\n\n  // Fetch tasks with axios\n  const fetchTasks = async () => {\n    // const res = await axios.get(baseUrl);\n    const { data } = await axios.get(baseUrl);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // ADD TASK\n  // const addTask = async (newTask) => {\n  //   const res = await fetch(baseUrl, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newTask),\n  //   });\n  //   fetchTasks();\n  // };\n\n  const addTask = async (newTask) => {\n    await axios.post(baseUrl, newTask);\n    fetchTasks();\n  };\n\n  // const addTask = (newTask) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const addNewTask = { id, ...newTask };\n  //   setTasks([...tasks, addNewTask]);\n  // };\n\n  // DELETE TASK\n  const deleteTask = async (deletedTaskId) => {\n    await axios.delete(`${baseUrl}/${deletedTaskId}`);\n    fetchTasks();\n  };\n\n  // const deleteTask = async (deletedTaskId) => {\n  //   await fetch(`${baseUrl}/${deletedTaskId}`, {\n  //     method: \"DELETE\",\n  //   });\n  //   fetchTasks();\n  // };\n\n  // const deleteTask = (deletedTaskId) => {\n  // console.log(\"delete\", deletedTask);\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  // };\n\n  //TOGGLE DONE\n  const toggleDone = async (toogleDoneId) => {\n    const { data } = await axios.get(`${baseUrl}/${toogleDoneId}`);\n    const updatedTask = { ...data, isDone: !data.isDone };\n\n    await axios.put(`${baseUrl}/${toogleDoneId}`, updatedTask);\n    fetchTasks();\n  };\n\n  // const toggleDone = async (toogleDoneId) => {\n  //   const res = await fetch(`${baseUrl}/${toogleDoneId}`);\n  //   const data = await res.json();\n  //   const updatedTask = { ...data, isDone: !data.isDone };\n\n  //   await fetch(`${baseUrl}/${toogleDoneId}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updatedTask),\n  //   });\n  //   fetchTasks();\n  // };\n\n  // const toggleDone = (toogleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === toogleDoneId ? { ...task, isDone: !task.isDone } : task\n  //     )\n  //   );\n  // };\n\n  //TOOGLESHOW\n  const toggleShow = () => setShowAddTask(!showAddTask);\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        showAddTask={showAddTask}\n        toggleShow={toggleShow}\n      />\n      <button\n        className=\"btn\"\n        style={{ backgroundColor: \"purple\", alignSelf: \"center\" }}\n        onClick={toggleShow}\n        // onClick={handleClick}\n      >\n        TEXT\n      </button>\n      {showAddTask && <AddTask addTask={addTask} />}\n      {/* <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} /> */}\n\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\n      ) : (\n        <p style={{ textAlign: \"center\" }}>No Tasks to Show</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}